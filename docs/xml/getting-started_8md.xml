<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="getting-started_8md" kind="file" language="Markdown">
    <compoundname>getting-started.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Getting<sp/>Started</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>get<sp/>started<sp/>with<sp/>CrewAI,<sp/>follow<sp/>these<sp/>simple<sp/>steps:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>**Installation**:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">pip<sp/>install<sp/>crewai</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>example<sp/>below<sp/>also<sp/>uses<sp/>duckduckgo,<sp/>so<sp/>also<sp/>install<sp/>that</highlight></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">pip<sp/>install<sp/>duckduckgo-search</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2.<sp/>**Setting<sp/>Up<sp/>Your<sp/>Crew**:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>os</highlight></codeline>
<codeline><highlight class="normal">from<sp/>crewai<sp/>import<sp/>Agent,<sp/>Task,<sp/>Crew,<sp/>Process</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">os.environ[&quot;OPENAI_API_KEY&quot;]<sp/>=<sp/>&quot;YOUR<sp/>KEY&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>You<sp/>can<sp/>choose<sp/>to<sp/>use<sp/>a<sp/>local<sp/>model<sp/>through<sp/>Ollama<sp/>for<sp/>example.<sp/>See<sp/>./docs/llm-connections.md<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>from<sp/>langchain.llms<sp/>import<sp/>Ollama</highlight></codeline>
<codeline><highlight class="normal">#<sp/>ollama_llm<sp/>=<sp/>Ollama(model=&quot;openhermes&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Install<sp/>duckduckgo-search<sp/>for<sp/>this<sp/>example:</highlight></codeline>
<codeline><highlight class="normal">#<sp/>!pip<sp/>install<sp/>-U<sp/>duckduckgo-search</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">from<sp/>langchain.tools<sp/>import<sp/>DuckDuckGoSearchRun</highlight></codeline>
<codeline><highlight class="normal">search_tool<sp/>=<sp/>DuckDuckGoSearchRun()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Define<sp/>your<sp/>agents<sp/>with<sp/>roles<sp/>and<sp/>goals</highlight></codeline>
<codeline><highlight class="normal">researcher<sp/>=<sp/>Agent(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>role=&apos;Senior<sp/>Research<sp/>Analyst&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>goal=&apos;Uncover<sp/>cutting-edge<sp/>developments<sp/>in<sp/>AI<sp/>and<sp/>data<sp/>science&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>backstory=&quot;&quot;&quot;You<sp/>work<sp/>at<sp/>a<sp/>leading<sp/>tech<sp/>think<sp/>tank.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Your<sp/>expertise<sp/>lies<sp/>in<sp/>identifying<sp/>emerging<sp/>trends.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>You<sp/>have<sp/>a<sp/>knack<sp/>for<sp/>dissecting<sp/>complex<sp/>data<sp/>and<sp/>presenting</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>actionable<sp/>insights.&quot;&quot;&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>verbose=True,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>allow_delegation=False,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tools=[search_tool]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>You<sp/>can<sp/>pass<sp/>an<sp/>optional<sp/>llm<sp/>attribute<sp/>specifying<sp/>what<sp/>mode<sp/>you<sp/>wanna<sp/>use.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>It<sp/>can<sp/>be<sp/>a<sp/>local<sp/>model<sp/>through<sp/>Ollama<sp/>/<sp/>LM<sp/>Studio<sp/>or<sp/>a<sp/>remote</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>model<sp/>like<sp/>OpenAI,<sp/>Mistral,<sp/>Antrophic<sp/>of<sp/>others<sp/>(https://python.langchain.com/docs/integrations/llms/)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>Examples:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>llm=ollama_llm<sp/>#<sp/>was<sp/>defined<sp/>above<sp/>in<sp/>the<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>llm=ChatOpenAI(model_name=&quot;gpt-3.5&quot;,<sp/>temperature=0.7)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">writer<sp/>=<sp/>Agent(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>role=&apos;Tech<sp/>Content<sp/>Strategist&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>goal=&apos;Craft<sp/>compelling<sp/>content<sp/>on<sp/>tech<sp/>advancements&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>backstory=&quot;&quot;&quot;You<sp/>are<sp/>a<sp/>renowned<sp/>Content<sp/>Strategist,<sp/>known<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>your<sp/>insightful<sp/>and<sp/>engaging<sp/>articles.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>You<sp/>transform<sp/>complex<sp/>concepts<sp/>into<sp/>compelling<sp/>narratives.&quot;&quot;&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>verbose=True,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>allow_delegation=True,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#<sp/>(optional)<sp/>llm=ollama_llm</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Create<sp/>tasks<sp/>for<sp/>your<sp/>agents</highlight></codeline>
<codeline><highlight class="normal">task1<sp/>=<sp/>Task(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>description=&quot;&quot;&quot;Conduct<sp/>a<sp/>comprehensive<sp/>analysis<sp/>of<sp/>the<sp/>latest<sp/>advancements<sp/>in<sp/>AI<sp/>in<sp/>2024.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Identify<sp/>key<sp/>trends,<sp/>breakthrough<sp/>technologies,<sp/>and<sp/>potential<sp/>industry<sp/>impacts.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Your<sp/>final<sp/>answer<sp/>MUST<sp/>be<sp/>a<sp/>full<sp/>analysis<sp/>report&quot;&quot;&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>agent=researcher</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">task2<sp/>=<sp/>Task(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>description=&quot;&quot;&quot;Using<sp/>the<sp/>insights<sp/>provided,<sp/>develop<sp/>an<sp/>engaging<sp/>blog</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>post<sp/>that<sp/>highlights<sp/>the<sp/>most<sp/>significant<sp/>AI<sp/>advancements.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Your<sp/>post<sp/>should<sp/>be<sp/>informative<sp/>yet<sp/>accessible,<sp/>catering<sp/>to<sp/>a<sp/>tech-savvy<sp/>audience.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Make<sp/>it<sp/>sound<sp/>cool,<sp/>avoid<sp/>complex<sp/>words<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>sound<sp/>like<sp/>AI.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Your<sp/>final<sp/>answer<sp/>MUST<sp/>be<sp/>the<sp/>full<sp/>blog<sp/>post<sp/>of<sp/>at<sp/>least<sp/>4<sp/>paragraphs.&quot;&quot;&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>agent=writer</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Instantiate<sp/>your<sp/>crew<sp/>with<sp/>a<sp/>sequential<sp/>process</highlight></codeline>
<codeline><highlight class="normal">crew<sp/>=<sp/>Crew(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>agents=[researcher,<sp/>writer],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tasks=[task1,<sp/>task2],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>verbose=2,<sp/>#<sp/>You<sp/>can<sp/>set<sp/>it<sp/>to<sp/>1<sp/>or<sp/>2<sp/>to<sp/>different<sp/>logging<sp/>levels</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Get<sp/>your<sp/>crew<sp/>to<sp/>work!</highlight></codeline>
<codeline><highlight class="normal">result<sp/>=<sp/>crew.kickoff()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">print(&quot;######################&quot;)</highlight></codeline>
<codeline><highlight class="normal">print(result)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Currently<sp/>the<sp/>only<sp/>supported<sp/>process<sp/>is<sp/>`Process.sequential`,<sp/>where<sp/>one<sp/>task<sp/>is<sp/>executed<sp/>after<sp/>the<sp/>other<sp/>and<sp/>the<sp/>outcome<sp/>of<sp/>one<sp/>is<sp/>passed<sp/>as<sp/>extra<sp/>content<sp/>into<sp/>this<sp/>next.</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/HyperDriveAI/crewAI/docs/getting-started.md"/>
  </compounddef>
</doxygen>
